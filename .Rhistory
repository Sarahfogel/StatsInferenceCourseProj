set.seed(59)    #Make this reproducible by setting the starting point
N<-10000
sums<-c()
for (i in 1:N) {
p<-rpois(40, lambda=.2)
sums[i]<-sum(p)
}
#==========================Question 1===========================================
hist(sums)
set.seed(59)    #Make this reproducible by setting the starting point
N<-10000
means<-c()
for (i in 1:N) {
p<-rpois(40, lambda=.2)
means[i]<-mean(p)
}
#==========================Question 1===========================================
hist(means)
mean(means)
?abline
hist(means)
abline(v=mean(means), lty=1)
abline(v=.2, lty=2, col="red")
hist(means, col="steelblue")
abline(v=mean(means), lty=1)
abline(v=.2, lty=2, col="red")
hist(means, col="steelblue")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
mean(means)
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2)
lwd=c(3,1), col=c("black", "red"))
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates",
xlim=c(.15, .25))
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates",
xlim=c(.15, .25))
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
.2-mean(means)
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000
means<-c()
for (i in 1:N) {
p<-rpois(40, lambda=.2)
means[i]<-mean(p)
}
#==========================Question 1===========================================
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
.2-mean(means)
mean(means)
hist(runif(1000))
hist(runif(10000))
hist(runif(100000))
mns = NULL
for (i in 1:100000) mns = c(mns, mean(runif(40)))
hist(mns)
.2/40
var(means)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
sd(means)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means)+sd(means), lty=1, lwd=3)
abline(v=mean(means)-sd(means), lty=1, lwd=3)
abline(v=.2+sqrt(.005), lty=2, col="red")
abline(v=.2-sqrt(.005), lty=2, col="red")
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3)
abline(v=mean(means)-sd(means), lty=1, lwd=3)
abline(v=.2+sqrt(.005), lty=2, col="red")
abline(v=.2-sqrt(.005), lty=2, col="red")
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="darkolivegreen4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="darkolivegreen4")
abline(v=.2+sqrt(.005), lty=2, col="darkmagenta")
abline(v=.2-sqrt(.005), lty=2, col="darkmagenta")
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="darkolivegreen")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="darkolivegreen")
abline(v=.2+sqrt(.005), lty=2, col="darkmagenta")
abline(v=.2-sqrt(.005), lty=2, col="darkmagenta")
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="navyblue")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="navyblue")
abline(v=.2+sqrt(.005), lty=2, col="orangered")
abline(v=.2-sqrt(.005), lty=2, col="orangered")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","navyblue", "red", "orangered"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=.2+sqrt(.005), lty=2, col="yellow")
abline(v=.2-sqrt(.005), lty=2, col="yellow")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellow"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=.2+sqrt(.005), lty=2, col="yellowgreen")
abline(v=.2-sqrt(.005), lty=2, col="yellowgreen")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellowgreen"))
?qqplot
qqnorm(means)
qqline(means)
means
set.seed(59)    #Make this reproducible by setting the starting point
N<-1006         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rpois(40, lambda=.2)
means[i]<-mean(p)
}
#==========================Question 1===========================================
#Show where the distribution is centered at and compare it to the theoretical
#  center of the distribution.
#The theoretical center of the distribution of sample means is the same as the
#  center of the distribution that the sample comes from, so lambda=.2
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
.2-mean(means)
#=========================Question 2 =============================================
#Show how variable it is and compare it to the theoretical variance of the distribution.
# The theoretical variance of the distribution of sample means is sigma^2/n, where sigma^2
#    is the variance of the distribution where the sample came from and n is the
#    number of observations in each sample.  In this case that is .2/40=.005
var(means)
sd(means)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=.2+sqrt(.005), lty=2, col="yellowgreen")
abline(v=.2-sqrt(.005), lty=2, col="yellowgreen")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellowgreen"))
#==============================Question 3 ======================================
#Show that the distribution is approximately normal.
qqline(means)
qqline(means)
qqplot(means)
means
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rpois(40, lambda=.2)
means[i]<-mean(p)
}
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
.2-mean(means)
var(means)
sd(means)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=.2, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=.2+sqrt(.005), lty=2, col="yellowgreen")
abline(v=.2-sqrt(.005), lty=2, col="yellowgreen")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellowgreen"))
qqplot(means)
qqline(means)
qqnorm(means)
qqline(means)
mean(rpois(1000000))
mean(rpois(1000000, .2))
var(rpois(10000000, .2))
hist(rpois(1000, .2))
rpois(1000, .2)
hist(rpois(1000, 2))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
lines(density(means))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates", prob=T)
lines(density(means))
xfit<-seq(min(means)), max(means), length = 40)
yfit<-dnorm(xfit, mean=mean(means), sd=sd(means))
#Add that to plot
lines(xfit, yfit, lty=2, col="red")
xfit<-seq(min(means), max(means), length = 40)
yfit<-dnorm(xfit, mean=mean(means), sd=sd(means))
lines(xfit, yfit, lty=2, col="red")
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates", prob=T)
lines(density(means), lwd=3)
#Create normal density
xfit<-seq(min(means), max(means), length = 40)
yfit<-dnorm(xfit, mean=mean(means), sd=sd(means))
#Add that to plot
lines(xfit, yfit, lty=2, col="red")
legend(legend=c("Actual Kernal Density", "Theoretical Normal Density"),
x="topright", lty=c(1,2), lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates", prob=T)
lines(density(means), lwd=3)
#Create normal density
xfit<-seq(min(means), max(means), length = 40)
yfit<-dnorm(xfit, mean=mean(means), sd=sd(means))
#Add that to plot
lines(xfit, yfit, lty=2, col="red")
legend(legend=c("Kernal Density Estimate", "Theoretical Normal Density"),
x="topright", lty=c(1,2), lwd=c(3,1), col=c("black", "red"))
?rexp
par(mfrow=c(1,2))
hist(rexp(1000))
expmeans<=NULL
for (i in 1:N) {
p<-rexp(40)
expmeans[i]<-mean(p)
}
hist(expmeans)
expmeans<-NULL
for (i in 1:N) {
p<-rexp(40)
expmeans[i]<-mean(p)
}
hist(expmeans)
par(mfrow=c(1,1))
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rexp(40, lambda=.2)
means[i]<-mean(p)
}
?rexp
p<-rexp(40, rate=.2)
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rexp(40, rate=.2)
means[i]<-mean(p)
}
.2-mean(means)
1/.2
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rexp(40, rate=5)
means[i]<-mean(p)
}
.2-mean(means)
set.seed(59)    #Make this reproducible by setting the starting point
N<-1000         #Set number of simulations
means<-c()      #Initialize a vector to hold the means of the samples of 40 variates
for (i in 1:N) {
p<-rexp(40, rate=.2)
means[i]<-mean(p)
}
theoretical.mean<-5
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=theoretical.mean, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
theoretical.mean-mean(means)
var(means)
1/(40*.2)
1/(40*.2*.2)
sd(means)
1/(sqrt(40)*.2)
theoretical.sd<-1/(sqrt(40)*.2)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates")
abline(v=mean(means), lty=1, lwd=3)
abline(v=theoretical.mean, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=theoretical.mean+theoretical.sd, lty=2, col="yellowgreen")
abline(v=theoretical.mean-theoretical.sd, lty=2, col="yellowgreen")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellowgreen"))
qqnorm(means)
qqline(means)
hist(means, col="steelblue", main="Sample Means of 40 Poisson(0.2) Random Variates", prob=T)
lines(density(means), lwd=3)
xfit<-seq(min(means), max(means), length = 40)
yfit<-dnorm(xfit, mean=mean(means), sd=sd(means))
#Add that to plot
lines(xfit, yfit, lty=2, col="red")
legend(legend=c("Kernal Density Estimate", "Theoretical Normal Density"),
x="topright", lty=c(1,2), lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Exponential(0.2) Random Variates")
hist(means, col="steelblue", main="Sample Means of 40 Exponential(0.2) Random Variates", prob=T)
abline(v=mean(means), lty=1, lwd=3)
abline(v=theoretical.mean, lty=2, col="red")
legend(legend=c("Sample Mean", "Theoretical Mean"), x="topright", lty=c(1,2),
lwd=c(3,1), col=c("black", "red"))
hist(means, col="steelblue", main="Sample Means of 40 Exponential(0.2) Random Variates", prob=T)
abline(v=mean(means), lty=1, lwd=3)
abline(v=theoretical.mean, lty=2, col="red")
abline(v=mean(means)+sd(means), lty=1, lwd=3, col="purple4")
abline(v=mean(means)-sd(means), lty=1, lwd=3, col="purple4")
abline(v=theoretical.mean+theoretical.sd, lty=2, col="yellowgreen")
abline(v=theoretical.mean-theoretical.sd, lty=2, col="yellowgreen")
legend(legend=c("Sample Mean", "Sample Mean +/- Sample SD" ,"Theoretical Mean",
"Theoretical Mean +/- Theoretical SD"),
x="topright", lty=c(1,1,2,2), lwd=c(3,3,1,1), col=c("black","purple4", "red", "yellowgreen"))
library(datasets)
data(ToothGrowth)
summary(ToothGrowth)
str(ToothGrowth)
dim(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
par(mfrow=c(1,2))
hist(ToothGrowth$len)
hist(ToothGrowth$dose)
table(ToothGrowth$supp)
summary(ToothGrowth)
?bwplot
??bwplot
library(lattice)
?bwplot
bwplot(ToothGrowth$len~ToothGrowth$supp)
bwplot(ToothGrowth$len~ToothGrowth$dose)
bwplot(ToothGrowth$len~ToothGrowth$supp)
bwplot(ToothGrowth$len~as.factor(ToothGrowth$dose))
bwplot(ToothGrowth$len~ToothGrowth$supp)
hist(ToothGrowth$len)
?table
?split
Tooth.split<-split(ToothGrowth$len, f=list(ToothGrowth$supp, ToothGrowth$dose))
-split(ToothGrowth$len, f=list(ToothGrowth$supp, ToothGrowth$dose))
Tooth.split
?ttest
?t.test
par(mfrow=c(1,1))
t.test(Tooth.split)
Tooth.split.supp<-split(ToothGrowth$len, f=list(ToothGrowth$supp))
Tooth.split.dose<-split(ToothGrowth$len, f=list(ToothGrowth$dose))
Tooth.split.both<-split(ToothGrowth$len, f=list(ToothGrowth$supp, ToothGrowth$dose))
Tooth.split.supp
t.test(Tooth.split$OJ, Tooth.split$VC)
Tooth.split$OJ
t.test(Tooth.split.supp$OJ, Tooth.split.supp$VC)
Tooth.split.dose
t.test(Tooth.split.dose$0.5, Tooth.split.dose$1)
t.test(Tooth.split.dose$`0.5`, Tooth.split.dose$`1`)
bwplot(ToothGrowth$len~as.factor(ToothGrowth$dose))
t.test(Tooth.split.dose$`0.5`, Tooth.split.dose$`1`)
t.test(Tooth.split.dose$`1`, Tooth.split.dose$`2`)
t.test(Tooth.split.dose$`0.5`, Tooth.split.dose$`2`)
bwplot(ToothGrowth$len~as.factor(ToothGrowth$dose)+ToothGrowth$supp)
par(mfrow=c(1,2))
bwplot(ToothGrowth$len~ToothGrowth$supp)
bwplot(ToothGrowth$len~as.factor(ToothGrowth$dose))
par(mfrow=c(1,1))
bwplot(ToothGrowth$len~ToothGrowth$supp|as.factor(ToothGrowth$dose))
